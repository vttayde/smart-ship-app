name: Test Suite

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  schedule:
    # Run tests daily at 2 AM UTC
    - cron: '0 2 * * *'

env:
  NODE_VERSION: '18'

jobs:
  unit-tests:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Uncomment when tests are implemented
      # - name: Run unit tests
      #   run: npm test -- --coverage
      #
      # - name: Upload coverage to Codecov
      #   uses: codecov/codecov-action@v4
      #   with:
      #     file: ./coverage/lcov.info
      #     flags: unittests

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: smartship_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Uncomment when Prisma and tests are set up
      # - name: Setup test database
      #   run: |
      #     npx prisma migrate deploy
      #     npx prisma db seed
      #   env:
      #     DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smartship_test
      #
      # - name: Run integration tests
      #   run: npm run test:integration
      #   env:
      #     DATABASE_URL: postgresql://postgres:postgres@localhost:5432/smartship_test

  e2e-tests:
    name: E2E Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      # Uncomment when Playwright tests are set up
      # - name: Install Playwright browsers
      #   run: npx playwright install --with-deps
      #
      # - name: Build application
      #   run: npm run build
      #
      # - name: Run E2E tests
      #   run: npm run test:e2e
      #
      # - name: Upload test results
      #   uses: actions/upload-artifact@v4
      #   if: always()
      #   with:
      #     name: playwright-report
      #     path: playwright-report/
      #     retention-days: 7
